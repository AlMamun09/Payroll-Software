@model PayrollSoftware.Infrastructure.Domain.Entities.Employee

@{
    ViewData["Title"] = Model.EmployeeId == Guid.Empty ? "Create Employee" : "Edit Employee";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="@(Model.EmployeeId == Guid.Empty ? "Create" : "Edit")" method="post">
    @if (Model.EmployeeId != Guid.Empty)
    {
        <input type="hidden" asp-for="EmployeeId" />
        <input type="hidden" asp-for="EmployeeCode" />
    }

    <div class="form-group">
        <label asp-for="FullName" class="control-label"></label>
        <input asp-for="FullName" class="form-control" />
        <span asp-validation-for="FullName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Gender" class="control-label"></label>
        <select asp-for="Gender" class="form-control">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
        </select>
        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DateOfBirth" class="control-label"></label>
        <input asp-for="DateOfBirth" type="date" class="form-control" id="DateOfBirth" />
        <span asp-validation-for="DateOfBirth" class="text-danger"></span>
        <small id="ageMessage" class="form-text text-muted"></small>
    </div>

    <div class="form-group">
        <label asp-for="Designation" class="control-label"></label>
        <input asp-for="Designation" class="form-control" />
        <span asp-validation-for="Designation" class="text-danger"></span>
    </div>

    <!-- DepartmentId removed as requested -->

    <div class="form-group">
        <label asp-for="JoiningDate" class="control-label"></label>
        <input asp-for="JoiningDate" type="date" class="form-control" />
        <span asp-validation-for="JoiningDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="BasicSalary" class="control-label"></label>
        <input asp-for="BasicSalary" type="number" step="0.01" class="form-control" />
        <span asp-validation-for="BasicSalary" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EmploymentType" class="control-label"></label>
        <select asp-for="EmploymentType" class="form-control">
            <option value="">Select Employment Type</option>
            <option value="Full-time">Full-time</option>
            <option value="Part-time">Part-time</option>
            <option value="Intern">Intern</option>
        </select>
        <span asp-validation-for="EmploymentType" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PaymentSystem" class="control-label"></label>
        <select asp-for="PaymentSystem" class="form-control" id="PaymentSystem">
            <option value="">Select Payment System</option>
            <option value="Bank Transfer">Bank Transfer</option>
            <option value="Mobile Banking">Mobile Banking</option>
            <option value="Cash Payment">Cash Payment</option>
        </select>
        <span asp-validation-for="PaymentSystem" class="text-danger"></span>
    </div>

    <!-- Bank Transfer Fields -->
    <div id="bankTransferFields" style="display: none;">
        <div class="form-group">
            <label asp-for="AccountHolderName" class="control-label"></label>
            <input asp-for="AccountHolderName" class="form-control" />
            <span asp-validation-for="AccountHolderName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="BankAccountNumber" class="control-label"></label>
            <input asp-for="BankAccountNumber" class="form-control" />
            <span asp-validation-for="BankAccountNumber" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="BankAndBranchName" class="control-label"></label>
            <input asp-for="BankAndBranchName" class="form-control" />
            <span asp-validation-for="BankAndBranchName" class="text-danger"></span>
        </div>
    </div>

    <!-- Mobile Banking Fields -->
    <div id="mobileBankingFields" style="display: none;">
        <div class="form-group">
            <label asp-for="MobileNumber" class="control-label"></label>
            <input asp-for="MobileNumber" class="form-control" />
            <span asp-validation-for="MobileNumber" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Status" class="control-label"></label>
        <select asp-for="Status" class="form-control">
            <option value="Currently Active">Currently Active</option>
            <option value="Resigned">Resigned</option>
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">
            @(Model.EmployeeId == Guid.Empty ? "Create" : "Update")
        </button>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    <script>
        // Age calculation for Date of Birth
        document.getElementById('DateOfBirth').addEventListener('change', function() {
            var dob = new Date(this.value);
            var today = new Date();
            var age = today.getFullYear() - dob.getFullYear();
            var monthDiff = today.getMonth() - dob.getMonth();

            // Adjust age if birthday hasn't occurred this year
            if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {
                age--;
            }

            var ageMessage = document.getElementById('ageMessage');

            if (this.value) {
                if (age < 18) {
                    ageMessage.textContent = `Age: ${age} years - Employee must be at least 18 years old!`;
                    ageMessage.className = 'form-text text-danger';
                } else {
                    ageMessage.textContent = `Age: ${age} years - Valid age for employment`;
                    ageMessage.className = 'form-text text-success';
                }
            } else {
                ageMessage.textContent = '';
            }
        });

        // Show/hide payment system fields based on selection
        document.getElementById('PaymentSystem').addEventListener('change', function() {
            var paymentSystem = this.value;

            // Hide all fields first
            document.getElementById('bankTransferFields').style.display = 'none';
            document.getElementById('mobileBankingFields').style.display = 'none';

            // Show relevant fields
            if (paymentSystem === 'Bank Transfer') {
                document.getElementById('bankTransferFields').style.display = 'block';
            } else if (paymentSystem === 'Mobile Banking') {
                document.getElementById('mobileBankingFields').style.display = 'block';
            }
        });

        // Trigger change events on page load
        document.getElementById('DateOfBirth').dispatchEvent(new Event('change'));
        document.getElementById('PaymentSystem').dispatchEvent(new Event('change'));
    </script>
}